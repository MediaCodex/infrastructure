image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

variables:
  PLAN: plan.tfplan
  PATH: terraform/
  TF_IN_AUTOMATION: "true"
  PROD_ONLY: 'false'

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .terraform

stages:
  - tf-init
  - tf-validate
  - tf-plan
  - tf-apply

.variables_prod: &variables_prod
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_prod
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_prod

.variables_dev: &variables_dev
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_dev
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_dev

###
# Shared
###
.plan_review:
  script:
    - apk add curl
    - terraform workspace select $CI_ENVIRONMENT_NAME $PATH
    - terraform plan -out=$PLAN $PATH
    - echo "# Terraform planned changes ($(terraform workspace show $PATH))\n" > plan.txt
    - echo \`\`\`diff > plan.txt
    - (cd terraform && cp -r ../.terraform/ .terraform/  && terraform show -no-color ../${PLAN}) | tee -a ../plan.txt
    - echo \`\`\` >> plan.txt
    - sed -i -e 's/  +/+/g' plan.txt
    - sed -i -e 's/  ~/~/g' plan.txt
    - sed -i -e 's/  -/-/g' plan.txt
    - MESSAGE=$(cat plan.txt)
    - >-
      curl -X POST -g -H "PRIVATE-TOKEN: ${GITLAB_TOKEN}"
      --data-urlencode "body=${MESSAGE}"
      "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}/discussions"

.plan:
  stage: tf-plan
  script: 
    - terraform workspace select $CI_ENVIRONMENT_NAME $PATH
    - terrrform plan -out=$PLAN $PATH
  artifacts:
    name: plan
    paths:
      - $PLAN
  only:
    - merge_requests

.deploy:
  stage: tf-apply
  script:
    - terraform workspace select $CI_ENVIRONMENT_NAME $PATH
    - terraform apply -plan=$PLAN $PATH

###
# pre-deploy
###
init:
  stage: tf-init
  script:
    - terraform --version
    - terraform init -backend=false $PATH
validate:
  stage: tf-validate
  script:
    - terraform validate $PATH
    - terraform fmt -check=true $PATH

###
# Dev
###
plan_dev:
  <<: *variables_dev
  extends:
    - .plan
    - .plan_review
  environment:
    name: development
  except:
    variables:
      - $PROD_ONLY == 'true'

deploy_dev:
  <<: *variables_dev
  extends:
    - .deploy
  environment:
    name: development
  dependencies:
    - plan_dev
  only:
    - master
  except:
    variables:
      - $PROD_ONLY == 'true'

###
# Prod
###
plan_prod:
  <<: *variables_prod
  extends:
    - .plan
    - .plan_review
  environment:
    name: production

deploy_prod:
  <<: *variables_prod
  extends: 
    - .deploy
  environment:
    name: production
  dependencies:
    - plan_prod
  only:
    - master
  when: manual