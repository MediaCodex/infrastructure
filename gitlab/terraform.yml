default:
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .terraform

variables:
  TF_PLAN_JSON: plan.json
  TF_PATH: terraform/
  TF_IN_AUTOMATION: "true"
  PROD_ONLY: 'false'

stages:
  - validate
  - plan
  - deploy_dev
  - deploy_prod

.terraform-image:
  image:
    name: hashicorp/terraform:light
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

.aws_prod:
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_prod
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_prod

.aws_dev:
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_dev
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_dev

###
# Shared
###
.plan:
  stage: plan
  extends:
    - .terraform-image
  script:
    - terraform init $TF_PATH
    - terraform workspace select $CI_ENVIRONMENT_NAME $TF_PATH
    - terrrform plan -out=${CI_ENVIRONMENT_NAME}.tfplan $TF_PATH
    - apk --no-cache add jq
    - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
    - terraform show --json ${CI_ENVIRONMENT_NAME}.tfplan $TF_PATH | convert_report > ${CI_ENVIRONMENT_NAME}-${TF_PLAN_JSON}
  artifacts:
    name: plan
    paths:
      - ${CI_ENVIRONMENT_NAME}.tfplan
    reports:
      terraform: ${CI_ENVIRONMENT_NAME}-${TF_PLAN_JSON}
  only:
    - merge_requests

.apply:
  extends:
    - .terraform-image
  script:
    - terraform init $TF_PATH
    - terraform workspace select $CI_ENVIRONMENT_NAME $TF_PATH
    - terraform apply -plan=${CI_ENVIRONMENT_NAME}.tfplan $TF_PATH

###
# pre-deploy
###
validate_terraform (dev):
  extends:
    - .terraform-image
    - .aws_dev
  stage: validate
  script:
    - terraform --version
    - terraform init $TF_PATH
    - terraform workspace select development $TF_PATH
    - terraform validate $TF_PATH
    - terraform fmt -check=true -recursive=true $TF_PATH
  only:
    variables:
      - $PROD_ONLY == 'false'

validate_terraform (prod):
  extends:
    - .terraform-image
    - .aws_prod
  stage: validate
  script:
    - terraform --version
    - terraform init $TF_PATH
    - terraform workspace select production $TF_PATH
    - terraform validate $TF_PATH
    - terraform fmt -check=true -recursive=true $TF_PATH
  only:
    variables:
      - $PROD_ONLY == 'true'

###
# Dev
###
plan_dev:
  extends:
    - .aws_dev
    - .plan
  environment:
    name: development
  except:
    variables:
      - $PROD_ONLY == 'true'

apply_dev:
  stage: deploy_dev
  extends:
    - .aws_dev
    - .apply
  environment:
    name: development
  dependencies:
    - plan_dev
  only:
    - master
  except:
    variables:
      - $PROD_ONLY == 'true'

###
# Prod
###
plan_prod:
  extends:
    - .aws_prod
    - .plan
  environment:
    name: production

apply_prod:
  stage: deploy_prod
  extends:
    - .aws_prod
    - .apply
  environment:
    name: production
  dependencies:
    - plan_prod
    - apply_dev
  only:
    - master
  when: manual